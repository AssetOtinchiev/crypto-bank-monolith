@startuml C4_Elements
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml


Person(personAlias, "User", "")

System_Boundary(c1, "Flow Information") {
    Container(conatinerApiAlias, "Api Gateway","", "Handle all requests, give permission to the request")
    Container(cointainerAuthAlias, "Auth Service","", "Register, verify, update user")
    Container(conatinerBackofficeAlias, "Backoffice","", "User role administration | may be out of scope")
    Container(conatinerAccountAlias, "Account Service","", "fiat money flow, open an account, withdrawal, payment history")

    Container(conatinerCryptoAlias, "Crypto Service","", "Manipultaion with all crypto services")
    Container(conatinerCryptoBTCAlias, "Crypto BTC Service","", "Manipultaion with BTC, generate deposit, blockchain BTC confirmation")
    Container(conatinerCryptoBTCWebSocketNotificationAlias, "Crypto BTC Web Socket Notification","", "Notification about balance changes via web socket like SignalR")
    Container(conatinerCryptoBTCEmailNotificationAlias, "Crypto BTC Email Notification","", "Notification about balance changes via email")
    Container(conatinerCryptoETHAlias, "Crypto ETH Service","", "Manipultaion with ETH, generate deposit, blockchain ETH confirmation")
    Container(conatinerCryptoETHWebSocketNotificationAlias, "Crypto ETH Web Socket Notification","", "Notification about balance changes via web socket like SignalR")
    Container(conatinerCryptoETHEmailNotificationAlias, "Crypto ETH Email Notification","", "Notification about balance changes via email")


    Container(conatinerUtilityProviderAlias, "UtilityProvider Service","", "Registration recepit account, get history, payment by user")
    Container(conatinerUtilityProviderWebSocketNotificationAlias, "UtilityProvider Web Socket Notification","", "Notification about a new receipt via web socket")
    Container(conatinerUtilityProviderEmailNotificationAlias, "UtilityProvider Email Notification","", "Notification about a new receipt via email")

    Container(conatinerAccountReportAlias, "Account report", "Generating a report on open accounts upon request. On request")
    Container(conatinerCryptoReportAlias, "Crypto report", "Generating a report on the total amount of cryptocurrency deposited and withdrawn. On request")

}


Rel(personAlias, conatinerApiAlias, "", "")
Rel(conatinerApiAlias, cointainerAuthAlias, "", "")
Rel(conatinerApiAlias, conatinerBackofficeAlias, "", "")
Rel(conatinerApiAlias, conatinerAccountAlias, "", "")
Rel(conatinerApiAlias, conatinerCryptoAlias, "", "")

Rel(conatinerCryptoAlias, conatinerCryptoBTCAlias, "", "")
Rel(conatinerCryptoBTCAlias, conatinerCryptoBTCWebSocketNotificationAlias, "", "")
Rel(conatinerCryptoBTCAlias, conatinerCryptoBTCEmailNotificationAlias, "", "")
Rel(conatinerCryptoAlias, conatinerCryptoETHAlias, "", "")
Rel(conatinerCryptoETHAlias, conatinerCryptoETHWebSocketNotificationAlias, "", "")
Rel(conatinerCryptoETHAlias, conatinerCryptoETHEmailNotificationAlias, "", "")

Rel(conatinerApiAlias, conatinerUtilityProviderAlias, "", "")
Rel(conatinerUtilityProviderAlias, conatinerUtilityProviderWebSocketNotificationAlias, "", "")
Rel(conatinerUtilityProviderAlias, conatinerUtilityProviderEmailNotificationAlias, "", "")

Rel(conatinerApiAlias, conatinerAccountReportAlias, "", "")
Rel(conatinerApiAlias, conatinerCryptoReportAlias, "", "")


@enduml